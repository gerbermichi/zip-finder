stages:
  - build
  - test
  - deploy

build:
  image: node:11
  stage: build
  tags:
    - docker
  cache:
    paths:
      - node_modules/
      - /root/.npm/
  script:
    - npm i --quiet
    - npx ng build --prod
  artifacts:
    paths:
      - dist/

code_quality:
  image: node:11
  stage: test
  tags:
    - docker
  cache:
    policy: pull
    paths:
      - node_modules/
      - /root/.npm/
  script:
    - npm i --quiet
    - set -o pipefail
    - npx -n --max-old-space-size=8192 ng lint --format json | node transform.js > lint.json
  artifacts:
    reports:
      codequality: lint.json

ng-test:
  image: cypress/browsers:chrome69
  stage: test
  tags:
    - docker
  cache:
    policy: pull
    paths:
      - node_modules/
      - /root/.npm/
  script:
    - npm i --quiet
    - npx ng test --watch=false --code-coverage=true --browsers=ChromeHeadlessNoSandbox --reporters=junit
  coverage: '/Statements\s*:\s*(\d+[.]?\d*)\%/'
  artifacts:
    reports:
      junit: TESTS.xml

docker-build:
  image: docker:stable
  stage: test
  tags:
    - docker
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  dependencies:
    - build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/michael.gerber/zip-finder:$CI_COMMIT_SHA .
    - docker push registry.gitlab.com/michael.gerber/zip-finder:$CI_COMMIT_SHA

deploy_review:
  stage: deploy
  image: alpine
  tags:
    - docker
  only:
    - branches
  except:
    - master
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://${CI_ENVIRONMENT_SLUG}.${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}
    on_stop: stop_review
  script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-cluster nosebit --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --username="$KUBE_USER" --password="$KUBE_PASSWORD"
    - kubectl config set-context default --cluster=nosebit --user=admin
    - kubectl config use-context default
    - 'printf "apiVersion: v1\nkind: Secret\n$(kubectl create secret docker-registry gitlab-registry --docker-server=$CI_REGISTRY --docker-username=$CI_REGISTRY_USER --docker-password=$CI_REGISTRY_PASSWORD --docker-email=$GITLAB_USER_EMAIL -o yaml --dry-run)" | kubectl apply -f -'
    - sed 's/_APP_NAME_/'"${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_NAME}"'/g; s/_HOST_/'"${CI_ENVIRONMENT_SLUG}.${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}"'/g; s/_VERSION_/'"$CI_COMMIT_SHA"'/g' kubernetes.tpl.yml > kubernetes.yml;
    - kubectl apply -f kubernetes.yml

stop_review:
  stage: deploy
  image: alpine
  tags:
    - docker
  only:
    - branches
  except:
    - master
  when: manual
  variables:
    GIT_STRATEGY: none
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-cluster nosebit --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --username="$KUBE_USER" --password="$KUBE_PASSWORD"
    - kubectl config set-context default --cluster=nosebit --user=admin
    - kubectl config use-context default
    - kubectl delete services ${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_NAME}
    - kubectl delete deployments ${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_NAME}
    - kubectl delete incress ${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_NAME}

deploy_production:
  stage: deploy
  image: alpine
  tags:
    - docker
  only:
    - master
  environment:
    name: production
    url: http://${CI_PROJECT_NAME}.$KUBE_INGRESS_BASE_DOMAIN
  script:
    - apk add --no-cache curl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv ./kubectl /usr/local/bin/kubectl
    - kubectl config set-cluster nosebit --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --username="$KUBE_USER" --password="$KUBE_PASSWORD"
    - kubectl config set-context default --cluster=nosebit --user=admin
    - kubectl config use-context default
    - 'printf "apiVersion: v1\nkind: Secret\n$(kubectl create secret docker-registry gitlab-registry --docker-server=$CI_REGISTRY --docker-username=$CI_REGISTRY_USER --docker-password=$CI_REGISTRY_PASSWORD --docker-email=$GITLAB_USER_EMAIL -o yaml --dry-run)" | kubectl apply -f -'
    - sed 's/_APP_NAME_/'"${CI_ENVIRONMENT_SLUG}-${CI_PROJECT_NAME}"'/g; s/_HOST_/'"${CI_PROJECT_NAME}.${KUBE_INGRESS_BASE_DOMAIN}"'/g; s/_VERSION_/'"$CI_COMMIT_SHA"'/g' kubernetes.tpl.yml > kubernetes.yml;
    - kubectl apply -f kubernetes.yml
